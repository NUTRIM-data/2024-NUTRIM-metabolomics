---
title: "Day 2 - Practical 1 - basic metabolomics data analysis"
subtitle: "2024 NUTRIM microbiome & metabolome workshop"
author: YOUR-NAME
date: last-modified
keep-md: false
embed-resources: true
format: html
theme: 
  light: flatly
  dark: darkly
toc: true
number-sections: true
---

## 1. Intro {#using-quarto}

This is a notebook for the first tutorial on metabolomics! Feel free to add notes and text where you want and code chunks to execute and copy the code.

Please open .html file with the instructions for this tutorial , that you can find here: TODO

Remember to use the Visual mode of the notebook and uncheck "Render on Save" checkbox above!

## 2. Using Quarto - reminder üìù

During this workshop, we will write code and notes in Quarto documents.

Write notes in "[markdown](https://quarto.org/docs/authoring/markdown-basics.html "Markdown is plain text, with special characters to indicate headings, bold text, links etc"){target="_blank"}", e.g. your intentions, hypotheses, observations, etc.

```{r}
# write code in "chunks" (and comments too, using the # symbol)
print("Hello World")
```

Insert a chunk with option +cmd + I (Mac) or ctrl+ shift + I (Windows)

```{r, eval=FALSE}
print("Run this one line with ctrl + enter, or cmd + enter on macOS")
print("or run a whole chunk with ctrl/cmd + SHIFT + enter")
```

Run all previous chunks by clicking the first button in the corner of the chunk.

You can add notes wherever you want and new code chunks!

## 3. Load R packages üì¶

It is good practice to load all the packages and source or files you need at the top of your notebook.

```{r}
library(here)
library(tidyverse)
library(MetabolAnalyze) # contains pareto scaling
library(reshape2) # data manipulation
library(plotly) # interactive plots

# We also load an R script, with some useful functions we're going to use today.
source(here("functions.R"))
```

## 4. Read and inspect data üìÇ

```{r}
# give your objects short but informative names!
metabolites <- 
metadata_metabolites <- 
  
```

```{r}
# inspect your metabolites data
metabolites[1:10, 1:10]
```

```{r}
# inspect your metadata
head(metadata_metabolites)
```

**Task 1 - metabolites data:**

```{r}
ncol(metabolites)
```

```{r}
any(is.na(metabolites))
```

```{r}
colSums(metabolites == 0)
```

**Task 2 - metadata:**

```{r}

```

## 5. Data pretreatment **üîç**

### 5.1 Normalization

#### PQN normalization

```{r}
# pqn normalize the data here
metabolites_pqn <- 
```

#### TAN normalization

```{r}
# apply TAN normalization
metabolites_tan <- 
```

### 5.2 Scaling and transformation

Plot the histogram here:
```{r}

```

#### Auto scaling

**TASK 1:**

Inspect the `scale()` function:
```{r}
?base::scale
```

**TASK 2:**

**TASK 3 and 4:**

Auto scale the data here and plot a histogram:
```{r}
autoscaled_metabolites_pqn <- 
```

#### Pareto scaling

**TASK 1:**

Inspect the `scaling()` function:
```{r}
?MetabolAnalyze::scaling
```

**TASK 2:**

**TASK 3 and 4:**

Pareto scale the data here and plot a histogram:
```{r}
pareto_metabolites_pqn <- 
```

#### Log transformation

**TASK 1 and 2:**

Log transform the data here and plot a histogram:
```{r}
log_metabolites_pqn <- 
```

#### Square root transformation

**TASK 1 and 2:**

Apply a square root transformation here and plot a histogram:
```{r}
sqrt_metabolites_pqn <- 
```

## 6. Principal Component Analysis

```{r}
# Load the packages here
library(factoextra) # PCA functions
library(plotly) # interactive plots
```

### 6.1 PCA Model

**TASK 1:**

Perfom PCA:
```{r}
pca <- 
```

```{r}
str(pca)
```

### 6.2 Visualizations

```{r}
plot(pca)
```

Visualize the score plot:
```{r}

```

### 6.3 Loadings

Visualize the loadings plot:
```{r}

```

Select important metabolites based on a threshold:
```{r}
important_metabolites <- loadings$metabolite[which(abs(loadings$value) > 0.08 & loadings$variable == "PC1")]

important_metabolites
```


### 6.4 Biplot

Visualize biplot:
```{r}

```

### 6.5 Outliers

Plot an interactive ggplot:
```{r}

```

Remove outliers and perfrom a new PCA: 
```{r}

```

## 7. Next! ‚è©

-   Good job! üéâ You have finished this tutorial! Now you should be able to use different pretreatment methods and apply PCA in R.

-   At the next session after lunch, we will explore more fancy methods for metabolomics data analysis!

-   TODO: Click here:¬†<https://github.com/michaljjskawinski/2024-NUTRIM-metabolomics/blob/main/practical-2/web/practical2-instructions.html>

## 8. Session info

For reproducibility, it is useful to record the packages and versions used in your analyses. This is easy to do with `sessioninfo::session_info()`.

```{r}
sessioninfo::session_info()
```
